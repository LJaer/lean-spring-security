<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:security="http://www.springframework.org/schema/security"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
            http://www.springframework.org/schema/beans/spring-beans-4.2.xsd
            http://www.springframework.org/schema/security
            http://www.springframework.org/schema/security/spring-security-4.2.xsd">

    <!-- <security:http>: spring 过滤器链配置：
        1）需要拦截什么资源
        2）什么资源什么角色权限
        3）定义认证方式：HttpBasic，FormLogin（*）
        4）定义登录页面，定义登录请求地址，定义错误处理方式
    -->
    <security:http>
        <!--
            pattern: 需要拦截资源
            access: 拦截方式
            isFullyAuthenticated(): 该资源需要认证才可以访问
        -->
        <security:intercept-url pattern="/product/index" access="permitAll()"/>
        <security:intercept-url pattern="/userLogin" access="permitAll()"/>

        <security:intercept-url pattern="/product/add"
                                access="hasRole('ROLE_USER')"/>
        <security:intercept-url pattern="/product/update"
                                access="hasRole('ROLE_USER')"/>
        <security:intercept-url pattern="/product/list"
                                access="hasRole('ROLE_ADMIN')"/>
        <security:intercept-url pattern="/product/delete"
                                access="hasRole('ROLE_ADMIN')"/>

        <security:intercept-url pattern="/**" access="isFullyAuthenticated()"/>
        <!-- security:http-basic: 使用HttpBasic 方式进行登录（认证） -->
        <!--
        login-page: 自定义登录页面
        login-processing-url：自定义登录请求
        default-target-url： 登录成功跳转界面
        -->
        <security:form-login login-page="/userLogin"
                             login-processing-url="/securityLogin" default-target-url="/product/index"
                             authentication-success-handler-ref="myAuthenticationSuccessHandler"
                             authentication-failure-handler-ref="myAuthenticationFailureHandler"/>

        <!-- 自定义权限不足处理-->
        <security:access-denied-handler error-page="/error"/>

        <!-- 关闭Spring Security CSRF 机制-->
        <security:csrf disabled="true"/>
    </security:http>

    <!--
    security:authentication-manager： 认证管理器
    1）认证信息提供方式（账户名，密码，当前用户权限）
    -->
    <security:authentication-manager>
        <security:authentication-provider user-service-ref="myUserDetailService">
            <!--<security:user-service>
                <security:user name="admin" password="123456"
                               authorities="ROLE_USER"/>
                <security:user name="admin2" password="123456"
                               authorities="ROLE_ADMIN"/>
            </security:user-service>-->

            <!--使用加密算法对用户输入的密码进入加密，然后和数据库的密码进行配对-->
            <security:password-encoder ref="passwordEncoder"/>
        </security:authentication-provider>
    </security:authentication-manager>

    <bean id="passwordEncoder"
            class="org.springframework.security.crypto.password.NoOpPasswordEncoder" factory-method="getInstance"/>

    <bean id="myUserDetailService"
          class="com.ljaer.MyUserDetailService"/>

    <bean id="myAuthenticationSuccessHandler"
          class="com.ljaer.MyAuthenticationSuccessHandler"/>

    <bean id="myAuthenticationFailureHandler"
          class="com.ljaer.MyAuthenticationFailureHandler"/>
</beans>